/*
 * Maledict - An Interactive Tool for Learning Linear and Differential Cryptanalysis of SPNs
 * Copyright (C) 2016  Mike Carpenter
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
buildscript {
    evaluationDependsOnChildren()
}
 
subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'jacoco'
    apply plugin: 'application'
        
    mainClassName = "net.mjcarpenter.maledict.ui.Main"
    
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    eclipse {
        jdt {
            sourceCompatibility = 1.8
            targetCompatibility = 1.8
        }
    }

    repositories {
        jcenter()
    }
    
    project(':core') {
        apply plugin: 'java'
        dependencies {
            compile     'org.apache.commons:commons-lang3:3.5'
            compile     'com.thoughtworks.xstream:xstream:1.4.9'
            testCompile 'junit:junit:4.12'
        }
        test {
            testLogging.showStandardStreams = true
        }
    }
    
    project(':ui') {
        apply plugin: 'java'
        dependencies {
            compile     project(':core')
            compile     'org.apache.commons:commons-lang3:3.5'
            compile     'com.thoughtworks.xstream:xstream:1.4.9'
        }
        jar {
            manifest {
                attributes 'Main-Class': 'net.mjcarpenter.maledict.ui.Main',
                           'Class-Path': 'core.jar'
            }
        }
    }
    
    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories =  files(sourceSets.main.output)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
}
